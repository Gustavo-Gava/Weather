{"version":3,"sources":["services/api.js","pages/Home.jsx","App.jsx","index.jsx"],"names":["api","axios","create","baseURL","Home","useState","city","setCity","country","setCountry","weather","setWeather","temp","setTemp","input","setInput","inputBackup","setInputBackup","unit","setUnit","data","Date","getWeather","a","get","params","q","appid","process","units","tempStr","JSON","stringify","main","replace","name","sys","alert","event","preventDefault","useEffect","className","onSubmit","type","placeholder","onChange","e","target","value","getMonth","getDate","getFullYear","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,E,OAAMC,EAAMC,OAAO,CAC9BC,QAAS,4C,eCGJ,SAASC,IAAQ,IAAD,EACGC,mBAAS,QADZ,mBACdC,EADc,KACRC,EADQ,OAESF,mBAAS,WAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,mBAAS,SAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAIGN,mBAAS,IAJZ,mBAIdO,EAJc,KAIRC,EAJQ,OAKKR,mBAAS,IALd,mBAKdS,EALc,KAKPC,EALO,OAMiBV,mBAAS,UAN1B,mBAMdW,EANc,KAMDC,EANC,OAOGZ,mBAAS,UAPZ,mBAOda,EAPc,KAORC,EAPQ,KASfC,EAAO,IAAIC,KATI,SAiCNC,EAjCM,gFAiCrB,WAA0BhB,EAAMY,GAAhC,iBAAAK,EAAA,+EAE0BvB,EAAIwB,IAAI,WAAY,CACxCC,OAAQ,CACNC,EAAGpB,EACHqB,MAAOC,mCACPC,MAAOX,KANf,OAEUR,EAFV,OASQoB,EAAUC,KAAKC,UAAUtB,EAAQU,KAAKa,KAAKrB,MAC/CC,EAAQiB,EAAQI,QAAQ,IAAK,MAC7BvB,EAAWD,EAAQU,KAAKV,QAAQ,GAAGuB,MACnC1B,EAAQG,EAAQU,KAAKe,MACrB1B,EAAWC,EAAQU,KAAKgB,IAAI5B,SAbhC,kDAeI6B,MAAM,qBAfV,2DAjCqB,kEAoDrB,WAAiCC,GAAjC,SAAAf,EAAA,6DACEe,EAAMC,iBADR,SAEQjB,EAAWR,EAAOI,GAF1B,OAGED,EAAeH,GACfC,EAAS,IAJX,4CApDqB,sBA2DrB,OAlCAyB,qBAAU,WACRlB,EAAW,SAAU,YACpB,IAEHkB,qBAAU,WACRlB,EAAWN,EAAaE,KACvB,CAACA,IA6BF,sBAAKuB,UAAU,iBAAf,UACE,uBAAMC,SA7DW,4CA6DjB,UACE,uBACEC,KAAK,OACLC,YAAY,yBACZC,SAAU,SAACC,GAAD,OAAO/B,EAAS+B,EAAEC,OAAOC,QACnCA,MAAOlC,IAET,wBAAQ6B,KAAK,SAAb,uBAGF,sBAAKF,UAAU,wBAAf,UACE,qBAAIA,UAAU,WAAd,UACGnC,EADH,KACWE,KAEX,sCAjES,CACb,UACA,WACA,QACA,QACA,MACA,MACA,OACA,SACA,YACA,UACA,WACA,YAsDaY,EAAK6B,YADd,aAEK7B,EAAK8B,UAFV,aAEwB9B,EAAK+B,iBAC7B,qBAAKV,UAAU,oBAAf,SACE,iCACG7B,EACS,aAATM,EAAsB,QAAO,aAGlC,6BAAKR,OAGP,sBAAK+B,UAAU,wBAAf,UACE,wBACEW,QAAS,kBAAMjC,EAAQ,aACvBsB,UAAoB,aAATvB,EAAsB,SAAW,GAF9C,wBAMA,wBACEkC,QAAS,kBAAMjC,EAAQ,WACvBsB,UAAoB,WAATvB,EAAoB,SAAW,GAF5C,2B,MC5FOmC,MAJf,WACE,OAAO,cAAC,EAAD,KCATC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ee86c217.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const api = axios.create({\r\n  baseURL: \"http://api.openweathermap.org/data/2.5/\"\r\n})","import { useEffect, useState } from \"react\"\r\n\r\nimport { api } from \"../services/api\"\r\n\r\nimport \"../assets/styles/Home.css\"\r\n\r\nexport function Home() {\r\n  const [city, setCity] = useState(\"City\")\r\n  const [country, setCountry] = useState(\"Country\")\r\n  const [weather, setWeather] = useState(\"Sunny\")\r\n  const [temp, setTemp] = useState(\"\")\r\n  const [input, setInput] = useState(\"\")\r\n  const [inputBackup, setInputBackup] = useState(\"London\")\r\n  const [unit, setUnit] = useState(\"metric\")\r\n\r\n  const data = new Date()\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ]\r\n\r\n  useEffect(() => {\r\n    getWeather(\"London\", \"metric\")\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getWeather(inputBackup, unit)\r\n  }, [unit])\r\n\r\n  async function getWeather(city, unit) {\r\n    try {\r\n      const weather = await api.get(\"weather/\", {\r\n        params: {\r\n          q: city,\r\n          appid: process.env.REACT_APP_OPEN_WEATHER_KEY,\r\n          units: unit,\r\n        },\r\n      })\r\n      let tempStr = JSON.stringify(weather.data.main.temp)\r\n      setTemp(tempStr.replace(\".\", \",\"))\r\n      setWeather(weather.data.weather[0].main)\r\n      setCity(weather.data.name)\r\n      setCountry(weather.data.sys.country)\r\n    } catch {\r\n      alert(\"Check your input!\")\r\n    }\r\n  }\r\n\r\n  async function handleSearchClick(event) {\r\n    event.preventDefault()\r\n    await getWeather(input, unit)\r\n    setInputBackup(input)\r\n    setInput(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <form onSubmit={handleSearchClick}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"City, State or Country\"\r\n          onChange={(e) => setInput(e.target.value)}\r\n          value={input}\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      <div className=\"information-container\">\r\n        <h2 className=\"location\">\r\n          {city}, {country}\r\n        </h2>\r\n        <p>{`${\r\n          months[data.getMonth()]\r\n        }  ${data.getDate()}, ${data.getFullYear()}`}</p>\r\n        <div className=\"container-degrees\">\r\n          <span>\r\n            {temp}\r\n            {unit === \"imperial\" ? \"°F\" : \"°C\"}\r\n          </span>\r\n        </div>\r\n        <h2>{weather}</h2>\r\n      </div>\r\n\r\n      <div className=\"change-unit-container\">\r\n        <button\r\n          onClick={() => setUnit(\"imperial\")}\r\n          className={unit === \"imperial\" ? \"active\" : {}}\r\n        >\r\n          Fahrenheit\r\n        </button>\r\n        <button\r\n          onClick={() => setUnit(\"metric\")}\r\n          className={unit === \"metric\" ? \"active\" : {}}\r\n        >\r\n          Celsius\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Home } from \"./pages/Home\";\n\nimport \"./assets/styles/global.css\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}